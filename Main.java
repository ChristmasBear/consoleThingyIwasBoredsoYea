package com.polair;import java.io.File;import java.util.ArrayList;import java.util.List;import java.util.Scanner;import java.util.concurrent.ExecutionException;public class Main {    public static void main(String[] args) {        askForInput();}    private static void askForInput() {        System.out.print("> ");        String[] args = {};        Scanner scanner = new Scanner(System.in);        String input = scanner.nextLine().toLowerCase();        args = input.split(" ");        if (scanCommands(args)) {            askForInput();        }    }    private static Boolean scanCommands(String[] args) {        if (args[0].equals("exit"))        {            System.out.println("Exiting...");            return false;        }        else if (args[0].equals("math.")) {            try {                String args1 = args[1];                String args2 = args[2];                double num;                if (args2.equals("sq") || args2.equals("square") || args2.equals("cb") || args2.equals("cube") || args2.equals("sr") || args2.equals("sqrt") || args2.equals("squareroot"))                {                    try {                        num = Double.parseDouble(args1);                    }                    catch (Exception e) {                        System.out.println("Invalid Double: " + args1);                        return true;                    }                    double result = 0d;                    if (args2.equals("sq") || args2.equals("square"))                    {                        result = Math.pow(num, 2);                    }                    else if (args2.equals("cb") || args2.equals("cube"))                    {                        result = Math.pow(num, 3);                    }                    else if (args2.equals("sr") || args2.equals("sqrt") || args2.equals("squareroot"))                    {                        result = Math.sqrt(num);                    }                    System.out.println(result);                }                else                {                    try {                        String args3 = args[3];                        double num1;                        double num2;                        try {                            num1 = Double.parseDouble(args1);                        }                        catch (Exception e) {                            System.out.println("Invalid Double: " + args1);                            return true;                        }                        if (!(args2.equals("+") || args2.equals("-") || args2.equals("*") || args2.equals("/") || args2.equals("x") || args2.equals("^"))) {                            System.out.println("Invalid Function: " + args2);                            return true;                        }                        try {                            num2 = Double.parseDouble(args3);                        }                        catch (Exception e) {                            System.out.println("Invalid Double: " + args3);                            return true;                        }                        double result = 0d;                        if (args2.equals("+")) {                            result = num1 + num2;                        }                        else if (args2.equals("-")) {                            result = num1 - num2;                        }                        else if (args2.equals("*") || args2.equals("x")) {                            result = num1 * num2;                        }                        else if (args2.equals("/")) {                            result = num1 / num2;                        }                        else if (args2.equals("^"))                        {                            result = Math.pow(num1, num2);                        }                        System.out.println(result);                    }                    catch (Exception e) {                        System.out.println("Invalid Syntax");                        return true;                    }                }            }            catch (Exception e) {                System.out.println("Invalid Syntax");                return true;            }        } else if (args[0].equals("file")) {            try {                File file = null;                String dir = null;                if (args[1].equals("dir")) {                    try {                        dir = args[2];                        System.out.println(File.separator);                        try {                            if (args[2].endsWith("\\")) {                                file = new File(dir + "null.txt");                            } else {                                file = new File(dir + "\\null.txt");                            }                            System.out.println("Directory Set: " + dir);                            file.delete();                        } catch (Exception e) {                            System.out.println("Invalid Directory: " + dir);                        }                    } catch (Exception e) {                        System.out.println("Invalid Usage: file dir <directory>");                    }                } else if (args[1].equals("new")) {                    if (!dir.equals(null)) {                        try {                            if (args[2].endsWith("\\")) {                                file = new File(dir + args[2]);                            } else {                                file = new File(dir + "\\" + args[2]);                            }                            System.out.println("File Made: " + file.getName());                        } catch (Exception e) {                            System.out.println("Invalid File Name");                        }                    } else {                        System.out.println("Directory Has Not Been Set");                    }                }            } catch (Exception e) {                System.out.println("Invalid Syntax");            }        } else if (args[0].equals("game")) {            if (args[1].equals("play")) {            }        }        return true;    }}